import streamlit as st
import pandas as pd
import plotly.express as px
import numpy as np

st.set_page_config(page_title="–ê–Ω–∞–ª–∏–∑ –∞–Ω–∫–µ—Ç", layout="wide", page_icon="üìä")
st.sidebar.success(" ‚¨ÜÔ∏è    –£–∑–Ω–∞–π—Ç–µ –æ –ø—Ä–æ–µ–∫—Ç–µ —á—É—Ç—å –±–æ–ª—å—à–µ ")

st.title("üìä –ê–Ω–∞–ª–∏–∑ –∞–Ω–∫–µ—Ç —Å—Ç—É–¥–µ–Ω—Ç–æ–≤ –º–µ–¥–∏—Ü–∏–Ω—Å–∫–∏—Ö —É–Ω–∏–≤–µ—Ä—Å–∏—Ç–µ—Ç–æ–≤")

st.markdown("–í —Ö–æ–¥–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –ø—Ä–æ–µ–∫—Ç–∞ –º—ã –ø—Ä–æ–≤–µ–ª–∏ –æ–ø—Ä–æ—Å —Å—Ä–µ–¥–∏ —Å—Ç—É–¥–µ–Ω—Ç–æ–≤ 2-–≥–æ –º–µ–¥–∏—Ü–∏–Ω—Å–∫–æ–≥–æ " 
            "—É–Ω–∏–≤–µ—Ä—Å–∏—Ç–µ—Ç–∞ - –†–ù–ò–ú–£ –∏–º. –ù.–ò. –ü–∏—Ä–æ–≥–æ–≤–∞. –¶–µ–ª—å—é –æ–ø—Ä–æ—Å–∞ –±—ã–ª–æ –≤—ã—è–≤–∏—Ç—å —Å–∞–º—ã–µ "
            "—Å–ª–æ–∂–Ω—ã–µ –ø—Ä–µ–¥–º–µ—Ç—ã, –≤—Å—Ç—Ä–µ—á–∞—é—â–∏–µ—Å—è –Ω–∞ –ø—É—Ç–∏ —É —Å—Ç—É–¥–µ–Ω—Ç–æ–≤ –¥–æ 3-–≥–æ –∫—É—Ä—Å–∞. –ò–º–µ–Ω–Ω–æ 3-–∏–π –∫—É—Ä—Å —Å—á–∏—Ç–∞–µ—Ç—Å—è –≤ –º–µ–¥–∏—Ü–∏–Ω—Å–∫–∏—Ö —É–Ω–∏–≤–µ—Ä—Å–∏—Ç–µ—Ç–∞—Ö "
            "_—ç–∫–≤–∞—Ç–æ—Ä–æ–º_. –ü–æ—Å–ª–µ –Ω–µ–≥–æ —É—á–µ–±–∞ –∏–¥–µ—Ç —á—É—Ç–æ—á–∫—É –ª–µ–≥—á–µ, —á–µ–º —ç—Ç–æ –±—ã–ª–æ _–¥–æ_.")

st.markdown("–í –æ–ø—Ä–æ—Å–µ –ø—Ä–∏–Ω—è–ª–æ —É—á–∞—Å—Ç–∏–µ –ø—Ä–∏–º–µ—Ä–Ω–æ 50 —á–µ–ª–æ–≤–µ–∫ —Å –ø–µ–¥–∏–∞—Ç—Ä–∏—á–µ—Å–∫–æ–≥–æ —Ñ–∞–∫—É–ª—å—Ç–µ—Ç–∞ - –º–æ–∂–µ—Ç–µ –æ–∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è "
            "—Å–æ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–æ–π –Ω–∏–∂–µ. –£—á–µ–±–Ω–∏–∫–∏ –ø–æ —Å–∞–º—ã–º —Å–ª–æ–∂–Ω—ã–º –ø—Ä–µ–¥–º–µ—Ç–∞–º –±—ã–ª–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω—ã –≤ –¥–∞–ª—å–Ω–µ–π—à–µ–º –¥–ª—è –æ–±—É—á–µ–Ω–∏—è –º–æ–¥–µ–ª–∏. ")

st.divider()
# –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö
dataframe = pd.read_csv('Anketa_Dlya_Studentov_Meda.xls', header=0, names=['0', '–∫—É—Ä—Å', '1 –∫—É—Ä—Å', '2 –∫—É—Ä—Å', '3 –∫—É—Ä—Å', 'time', 'find'])
dataframe.drop(columns='0', inplace=True)
dataframe.replace([
    '–í—Å—ë –∏ —Å—Ä–∞–∑—É',
    '–≤—Å–µ –≤–º–µ—Å—Ç–µ, –ø–æ—Ç–æ–º—É —á—Ç–æ –∫–∞–∂–¥—ã–π —Ä–∞–∑ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ —Ä–∞–∑–Ω—ã—Ö –∏—Å—Ç–æ—á–Ω–∏–∫–∞—Ö',
    '–í—Å—ë –≤–º–µ—Å—Ç–µ. '
], '–í—Å—ë –≤–º–µ—Å—Ç–µ', inplace=True)

# 1. –ì–¥–µ –∏—â—É—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é
st.header("üîç –ì–¥–µ —Å—Ç—É–¥–µ–Ω—Ç—ã –∏—â—É—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é")
fig_find = px.pie(dataframe.groupby('find')['time'].count().reset_index(),
                  values='time', names='find', color_discrete_sequence=px.colors.sequential.Greens_r)
fig_find.update_traces(hovertemplate='%{label}')
fig_find.update_layout(
    legend=dict(
    font=dict(size=16),
    x=-0.75,
))
st.plotly_chart(fig_find, use_container_width=True)

st.divider()

# 2. –í –∫–∞–∫–æ–µ –≤—Ä–µ–º—è —Å—É—Ç–æ–∫ –∏—â—É—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é
st.header("üïí –í –∫–∞–∫–æ–µ –≤—Ä–µ–º—è —Å—É—Ç–æ–∫ —Å—Ç—É–¥–µ–Ω—Ç—ã –∏—â—É—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é")
fig_time = px.pie(dataframe.groupby('time')['find'].count().reset_index(),
                  values='find', names='time', color_discrete_sequence=px.colors.sequential.Greens_r)
fig_time.update_traces(hovertemplate='%{label}')
fig_time.update_layout(
    margin=dict(l=0, r=0, t=0, b=0),
    legend=dict(
    font=dict(size=13)
))
st.plotly_chart(fig_time, use_container_width=True)

st.divider()

# 3. –ü–æ –∫—É—Ä—Å–∞–º
st.header("üéì –†–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –ø–æ –∫—É—Ä—Å–∞–º")
fig_course = px.pie(dataframe.groupby('–∫—É—Ä—Å')['find'].count().reset_index(),
                    values='find', names='–∫—É—Ä—Å', color_discrete_sequence=px.colors.sequential.Greens_r)
fig_course.update_traces(hovertemplate='%{label}')
fig_course.update_layout(
    margin=dict(l=50, r=50, t=50, b=50),
    legend=dict(
    font=dict(size=16),
    x=0.65,
))
st.plotly_chart(fig_course, use_container_width=True)

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫—É—Ä—Å–æ–≤ –ø–æ —Å–ª–æ–∂–Ω–æ—Å—Ç—è–º
def process_course_column(column_name, default_text):
    data = dataframe[column_name].replace(np.nan, default_text).values
    split_data = np.array([])
    for item in data:
        split_data = np.append(item.split(';'), split_data)
    subjects, counts = np.unique(split_data, return_counts=True)
    return pd.DataFrame({'–ø—Ä–µ–¥–º–µ—Ç': subjects, '—á–∏—Å–ª–æ': counts})

st.divider()

# 4. –°–ª–æ–∂–Ω–æ—Å—Ç–∏ 1 –∫—É—Ä—Å–∞
st.header("üìò –°–ª–æ–∂–Ω—ã–µ –ø—Ä–µ–¥–º–µ—Ç—ã –Ω–∞ 1 –∫—É—Ä—Å–µ")
s1_df = process_course_column('1 –∫—É—Ä—Å', '‚Äî')
fig_s1 = px.bar(s1_df.sort_values(by='—á–∏—Å–ª–æ'),
                y='–ø—Ä–µ–¥–º–µ—Ç', x='—á–∏—Å–ª–æ', orientation='h',
                hover_data=['—á–∏—Å–ª–æ'], color_discrete_sequence=px.colors.sequential.Plasma)
fig_s1.update_layout(yaxis_title=None)
st.plotly_chart(fig_s1, use_container_width=True)

st.divider()

# 5. –°–ª–æ–∂–Ω–æ—Å—Ç–∏ 2 –∫—É—Ä—Å–∞
st.header("üìó –°–ª–æ–∂–Ω—ã–µ –ø—Ä–µ–¥–º–µ—Ç—ã –Ω–∞ 2 –∫—É—Ä—Å–µ")
s2_df = process_course_column('2 –∫—É—Ä—Å', '–ï—â–µ –Ω–µ –¥–æ—à–µ–ª –¥–æ 2-–≥–æ –∫—É—Ä—Å–∞')
fig_s2 = px.bar(s2_df.sort_values(by='—á–∏—Å–ª–æ'),
                y='–ø—Ä–µ–¥–º–µ—Ç', x='—á–∏—Å–ª–æ', orientation='h',
                hover_data=['—á–∏—Å–ª–æ'], color_discrete_sequence=px.colors.sequential.Plasma)
fig_s2.update_layout(yaxis_title=None)
st.plotly_chart(fig_s2, use_container_width=True)

st.divider()

# 6. –°–ª–æ–∂–Ω–æ—Å—Ç–∏ 3 –∫—É—Ä—Å–∞
st.header("üìô –°–ª–æ–∂–Ω—ã–µ –ø—Ä–µ–¥–º–µ—Ç—ã –Ω–∞ 3 –∫—É—Ä—Å–µ")
s3_df = process_course_column('3 –∫—É—Ä—Å', '–ï—â–µ –Ω–µ –¥–æ—à–µ–ª –¥–æ 3-–≥–æ –∫—É—Ä—Å–∞')
fig_s3 = px.bar(s3_df.sort_values(by='—á–∏—Å–ª–æ'),
                y='–ø—Ä–µ–¥–º–µ—Ç', x='—á–∏—Å–ª–æ', orientation='h',
                hover_data=['—á–∏—Å–ª–æ'], color_discrete_sequence=px.colors.sequential.Plasma)
fig_s3.update_layout(yaxis_title=None)
st.plotly_chart(fig_s3, use_container_width=True)